// Generated from com/erick/example/antlr/MySQLLexer.g4 by ANTLR 4.5
package com.erick.example.antlr;
 
 
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MySQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SELECT=1, FROM=2, WHERE=3, AND=4, OR=5, XOR=6, IS=7, NULL=8, LIKE=9, IN=10, 
		EXISTS=11, ALL=12, ANY=13, TRUE=14, FALSE=15, DIVIDE=16, MOD=17, BETWEEN=18, 
		REGEXP=19, PLUS=20, MINUS=21, NEGATION=22, VERTBAR=23, BITAND=24, POWER_OP=25, 
		BINARY=26, SHIFT_LEFT=27, SHIFT_RIGHT=28, ESCAPE=29, ASTERISK=30, RPAREN=31, 
		LPAREN=32, RBRACK=33, LBRACK=34, COLON=35, ALL_FIELDS=36, EQ=37, LTH=38, 
		GTH=39, NOT_EQ=40, NOT=41, LET=42, GET=43, SEMI=44, COMMA=45, DOT=46, 
		COLLATE=47, INNER=48, OUTER=49, JOIN=50, CROSS=51, USING=52, INDEX=53, 
		KEY=54, ORDER=55, GROUP=56, BY=57, FOR=58, USE=59, IGNORE=60, PARTITION=61, 
		STRAIGHT_JOIN=62, NATURAL=63, LEFT=64, RIGHT=65, OJ=66, ON=67, ID=68, 
		INT=69, NEWLINE=70, WS=71, USER_VAR=72;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"SELECT", "FROM", "WHERE", "AND", "OR", "XOR", "IS", "NULL", "LIKE", "IN", 
		"EXISTS", "ALL", "ANY", "TRUE", "FALSE", "DIVIDE", "MOD", "BETWEEN", "REGEXP", 
		"PLUS", "MINUS", "NEGATION", "VERTBAR", "BITAND", "POWER_OP", "BINARY", 
		"SHIFT_LEFT", "SHIFT_RIGHT", "ESCAPE", "ASTERISK", "RPAREN", "LPAREN", 
		"RBRACK", "LBRACK", "COLON", "ALL_FIELDS", "EQ", "LTH", "GTH", "NOT_EQ", 
		"NOT", "LET", "GET", "SEMI", "COMMA", "DOT", "COLLATE", "INNER", "OUTER", 
		"JOIN", "CROSS", "USING", "INDEX", "KEY", "ORDER", "GROUP", "BY", "FOR", 
		"USE", "IGNORE", "PARTITION", "STRAIGHT_JOIN", "NATURAL", "LEFT", "RIGHT", 
		"OJ", "ON", "ID", "INT", "NEWLINE", "WS", "USER_VAR", "USER_VAR_SUBFIX1", 
		"USER_VAR_SUBFIX2", "USER_VAR_SUBFIX3", "USER_VAR_SUBFIX4"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"'all'", "'any'", "'true'", "'false'", null, null, null, "'regexp'", "'+'", 
		"'-'", "'~'", "'|'", "'&'", "'^'", "'binary'", "'<<'", "'>>'", "'escape'", 
		"'*'", "')'", "'('", "']'", "'['", "':'", "'.*'", "'='", "'<'", "'>'", 
		"'!='", null, "'<='", "'>='", "';'", "','", "'.'", "'collate'", "'inner'", 
		"'outer'", null, "'cross'", null, "'index'", null, null, null, null, null, 
		null, "'ignore'", "'partition'", "'straight_join'", "'natural'", "'left'", 
		"'right'", "'oj'", "'on'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "SELECT", "FROM", "WHERE", "AND", "OR", "XOR", "IS", "NULL", "LIKE", 
		"IN", "EXISTS", "ALL", "ANY", "TRUE", "FALSE", "DIVIDE", "MOD", "BETWEEN", 
		"REGEXP", "PLUS", "MINUS", "NEGATION", "VERTBAR", "BITAND", "POWER_OP", 
		"BINARY", "SHIFT_LEFT", "SHIFT_RIGHT", "ESCAPE", "ASTERISK", "RPAREN", 
		"LPAREN", "RBRACK", "LBRACK", "COLON", "ALL_FIELDS", "EQ", "LTH", "GTH", 
		"NOT_EQ", "NOT", "LET", "GET", "SEMI", "COMMA", "DOT", "COLLATE", "INNER", 
		"OUTER", "JOIN", "CROSS", "USING", "INDEX", "KEY", "ORDER", "GROUP", "BY", 
		"FOR", "USE", "IGNORE", "PARTITION", "STRAIGHT_JOIN", "NATURAL", "LEFT", 
		"RIGHT", "OJ", "ON", "ID", "INT", "NEWLINE", "WS", "USER_VAR"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MySQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MySQLLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2J\u026a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3"+
		"\2\3\2\5\2\u00a8\n\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\5\3\u00b2\n\3\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u00be\n\4\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\5\5\u00c8\n\5\3\6\3\6\3\6\3\6\3\6\3\6\5\6\u00d0\n\6\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\5\7\u00d8\n\7\3\b\3\b\3\b\3\b\5\b\u00de\n\b\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\t\5\t\u00e8\n\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\5\n\u00f2\n\n\3\13\3\13\3\13\3\13\5\13\u00f8\n\13\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\5\f\u0106\n\f\3\r\3\r\3\r\3\r\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3"+
		"\21\3\21\3\21\5\21\u011f\n\21\3\22\3\22\3\22\3\22\5\22\u0125\n\22\3\23"+
		"\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\5\23"+
		"\u0135\n\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27"+
		"\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37"+
		"\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)"+
		"\3)\3)\3*\3*\3*\3*\3*\3*\5*\u017c\n*\3+\3+\3+\3,\3,\3,\3-\3-\3.\3.\3/"+
		"\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3"+
		"\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3"+
		"\63\5\63\u01a6\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65"+
		"\3\65\3\65\3\65\3\65\3\65\3\65\5\65\u01b8\n\65\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\67\3\67\3\67\3\67\3\67\3\67\5\67\u01c6\n\67\38\38\38\38\38\38"+
		"\38\38\38\38\58\u01d2\n8\39\39\39\39\39\39\39\39\39\39\59\u01de\n9\3:"+
		"\3:\3:\3:\5:\u01e4\n:\3;\3;\3;\3;\3;\3;\5;\u01ec\n;\3<\3<\3<\3<\3<\3<"+
		"\5<\u01f4\n<\3=\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3>\3>\3>\3?\3?"+
		"\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3@\3@\3@\3@\3@\3@\3@\3@\3A\3A\3A"+
		"\3A\3A\3B\3B\3B\3B\3B\3B\3C\3C\3C\3D\3D\3D\3E\6E\u022f\nE\rE\16E\u0230"+
		"\3F\6F\u0234\nF\rF\16F\u0235\3G\5G\u0239\nG\3G\3G\3G\3G\3H\6H\u0240\n"+
		"H\rH\16H\u0241\3H\3H\3I\3I\3I\3I\3I\5I\u024b\nI\3J\3J\6J\u024f\nJ\rJ\16"+
		"J\u0250\3J\3J\3K\3K\6K\u0257\nK\rK\16K\u0258\3K\3K\3L\3L\6L\u025f\nL\r"+
		"L\16L\u0260\3L\3L\3M\3M\6M\u0267\nM\rM\16M\u0268\2\2N\3\3\5\4\7\5\t\6"+
		"\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24"+
		"\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K"+
		"\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177"+
		"A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093"+
		"\2\u0095\2\u0097\2\u0099\2\3\2\b\5\2C\\aac|\5\2\13\f\17\17\"\"\3\2bb\3"+
		"\2))\3\2$$\7\2&&\62;C\\aac|\u028a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2"+
		"\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2"+
		"\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2"+
		"u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2"+
		"\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089"+
		"\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2"+
		"\2\3\u00a7\3\2\2\2\5\u00b1\3\2\2\2\7\u00bd\3\2\2\2\t\u00c7\3\2\2\2\13"+
		"\u00cf\3\2\2\2\r\u00d7\3\2\2\2\17\u00dd\3\2\2\2\21\u00e7\3\2\2\2\23\u00f1"+
		"\3\2\2\2\25\u00f7\3\2\2\2\27\u0105\3\2\2\2\31\u0107\3\2\2\2\33\u010b\3"+
		"\2\2\2\35\u010f\3\2\2\2\37\u0114\3\2\2\2!\u011e\3\2\2\2#\u0124\3\2\2\2"+
		"%\u0134\3\2\2\2\'\u0136\3\2\2\2)\u013d\3\2\2\2+\u013f\3\2\2\2-\u0141\3"+
		"\2\2\2/\u0143\3\2\2\2\61\u0145\3\2\2\2\63\u0147\3\2\2\2\65\u0149\3\2\2"+
		"\2\67\u0150\3\2\2\29\u0153\3\2\2\2;\u0156\3\2\2\2=\u015d\3\2\2\2?\u015f"+
		"\3\2\2\2A\u0161\3\2\2\2C\u0163\3\2\2\2E\u0165\3\2\2\2G\u0167\3\2\2\2I"+
		"\u0169\3\2\2\2K\u016c\3\2\2\2M\u016e\3\2\2\2O\u0170\3\2\2\2Q\u0172\3\2"+
		"\2\2S\u017b\3\2\2\2U\u017d\3\2\2\2W\u0180\3\2\2\2Y\u0183\3\2\2\2[\u0185"+
		"\3\2\2\2]\u0187\3\2\2\2_\u0189\3\2\2\2a\u0191\3\2\2\2c\u0197\3\2\2\2e"+
		"\u01a5\3\2\2\2g\u01a7\3\2\2\2i\u01b7\3\2\2\2k\u01b9\3\2\2\2m\u01c5\3\2"+
		"\2\2o\u01d1\3\2\2\2q\u01dd\3\2\2\2s\u01e3\3\2\2\2u\u01eb\3\2\2\2w\u01f3"+
		"\3\2\2\2y\u01f5\3\2\2\2{\u01fc\3\2\2\2}\u0206\3\2\2\2\177\u0214\3\2\2"+
		"\2\u0081\u021c\3\2\2\2\u0083\u0221\3\2\2\2\u0085\u0227\3\2\2\2\u0087\u022a"+
		"\3\2\2\2\u0089\u022e\3\2\2\2\u008b\u0233\3\2\2\2\u008d\u0238\3\2\2\2\u008f"+
		"\u023f\3\2\2\2\u0091\u0245\3\2\2\2\u0093\u024c\3\2\2\2\u0095\u0254\3\2"+
		"\2\2\u0097\u025c\3\2\2\2\u0099\u0266\3\2\2\2\u009b\u009c\7u\2\2\u009c"+
		"\u009d\7g\2\2\u009d\u009e\7n\2\2\u009e\u009f\7g\2\2\u009f\u00a0\7e\2\2"+
		"\u00a0\u00a8\7v\2\2\u00a1\u00a2\7U\2\2\u00a2\u00a3\7G\2\2\u00a3\u00a4"+
		"\7N\2\2\u00a4\u00a5\7G\2\2\u00a5\u00a6\7E\2\2\u00a6\u00a8\7V\2\2\u00a7"+
		"\u009b\3\2\2\2\u00a7\u00a1\3\2\2\2\u00a8\4\3\2\2\2\u00a9\u00aa\7h\2\2"+
		"\u00aa\u00ab\7t\2\2\u00ab\u00ac\7q\2\2\u00ac\u00b2\7o\2\2\u00ad\u00ae"+
		"\7H\2\2\u00ae\u00af\7T\2\2\u00af\u00b0\7Q\2\2\u00b0\u00b2\7O\2\2\u00b1"+
		"\u00a9\3\2\2\2\u00b1\u00ad\3\2\2\2\u00b2\6\3\2\2\2\u00b3\u00b4\7y\2\2"+
		"\u00b4\u00b5\7j\2\2\u00b5\u00b6\7g\2\2\u00b6\u00b7\7t\2\2\u00b7\u00be"+
		"\7g\2\2\u00b8\u00b9\7Y\2\2\u00b9\u00ba\7J\2\2\u00ba\u00bb\7G\2\2\u00bb"+
		"\u00bc\7T\2\2\u00bc\u00be\7G\2\2\u00bd\u00b3\3\2\2\2\u00bd\u00b8\3\2\2"+
		"\2\u00be\b\3\2\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c8\7"+
		"f\2\2\u00c2\u00c3\7(\2\2\u00c3\u00c8\7(\2\2\u00c4\u00c5\7C\2\2\u00c5\u00c6"+
		"\7P\2\2\u00c6\u00c8\7F\2\2\u00c7\u00bf\3\2\2\2\u00c7\u00c2\3\2\2\2\u00c7"+
		"\u00c4\3\2\2\2\u00c8\n\3\2\2\2\u00c9\u00ca\7q\2\2\u00ca\u00d0\7t\2\2\u00cb"+
		"\u00cc\7~\2\2\u00cc\u00d0\7~\2\2\u00cd\u00ce\7Q\2\2\u00ce\u00d0\7T\2\2"+
		"\u00cf\u00c9\3\2\2\2\u00cf\u00cb\3\2\2\2\u00cf\u00cd\3\2\2\2\u00d0\f\3"+
		"\2\2\2\u00d1\u00d2\7z\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d8\7t\2\2\u00d4"+
		"\u00d5\7Z\2\2\u00d5\u00d6\7Q\2\2\u00d6\u00d8\7T\2\2\u00d7\u00d1\3\2\2"+
		"\2\u00d7\u00d4\3\2\2\2\u00d8\16\3\2\2\2\u00d9\u00da\7k\2\2\u00da\u00de"+
		"\7u\2\2\u00db\u00dc\7K\2\2\u00dc\u00de\7U\2\2\u00dd\u00d9\3\2\2\2\u00dd"+
		"\u00db\3\2\2\2\u00de\20\3\2\2\2\u00df\u00e0\7p\2\2\u00e0\u00e1\7w\2\2"+
		"\u00e1\u00e2\7n\2\2\u00e2\u00e8\7n\2\2\u00e3\u00e4\7P\2\2\u00e4\u00e5"+
		"\7W\2\2\u00e5\u00e6\7N\2\2\u00e6\u00e8\7N\2\2\u00e7\u00df\3\2\2\2\u00e7"+
		"\u00e3\3\2\2\2\u00e8\22\3\2\2\2\u00e9\u00ea\7n\2\2\u00ea\u00eb\7k\2\2"+
		"\u00eb\u00ec\7m\2\2\u00ec\u00f2\7g\2\2\u00ed\u00ee\7N\2\2\u00ee\u00ef"+
		"\7K\2\2\u00ef\u00f0\7M\2\2\u00f0\u00f2\7G\2\2\u00f1\u00e9\3\2\2\2\u00f1"+
		"\u00ed\3\2\2\2\u00f2\24\3\2\2\2\u00f3\u00f4\7k\2\2\u00f4\u00f8\7p\2\2"+
		"\u00f5\u00f6\7K\2\2\u00f6\u00f8\7P\2\2\u00f7\u00f3\3\2\2\2\u00f7\u00f5"+
		"\3\2\2\2\u00f8\26\3\2\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb\7z\2\2\u00fb"+
		"\u00fc\7k\2\2\u00fc\u00fd\7u\2\2\u00fd\u00fe\7v\2\2\u00fe\u0106\7u\2\2"+
		"\u00ff\u0100\7G\2\2\u0100\u0101\7Z\2\2\u0101\u0102\7K\2\2\u0102\u0103"+
		"\7U\2\2\u0103\u0104\7V\2\2\u0104\u0106\7U\2\2\u0105\u00f9\3\2\2\2\u0105"+
		"\u00ff\3\2\2\2\u0106\30\3\2\2\2\u0107\u0108\7c\2\2\u0108\u0109\7n\2\2"+
		"\u0109\u010a\7n\2\2\u010a\32\3\2\2\2\u010b\u010c\7c\2\2\u010c\u010d\7"+
		"p\2\2\u010d\u010e\7{\2\2\u010e\34\3\2\2\2\u010f\u0110\7v\2\2\u0110\u0111"+
		"\7t\2\2\u0111\u0112\7w\2\2\u0112\u0113\7g\2\2\u0113\36\3\2\2\2\u0114\u0115"+
		"\7h\2\2\u0115\u0116\7c\2\2\u0116\u0117\7n\2\2\u0117\u0118\7u\2\2\u0118"+
		"\u0119\7g\2\2\u0119 \3\2\2\2\u011a\u011b\7f\2\2\u011b\u011c\7k\2\2\u011c"+
		"\u011f\7x\2\2\u011d\u011f\7\61\2\2\u011e\u011a\3\2\2\2\u011e\u011d\3\2"+
		"\2\2\u011f\"\3\2\2\2\u0120\u0121\7o\2\2\u0121\u0122\7q\2\2\u0122\u0125"+
		"\7f\2\2\u0123\u0125\7\'\2\2\u0124\u0120\3\2\2\2\u0124\u0123\3\2\2\2\u0125"+
		"$\3\2\2\2\u0126\u0127\7d\2\2\u0127\u0128\7g\2\2\u0128\u0129\7v\2\2\u0129"+
		"\u012a\7y\2\2\u012a\u012b\7g\2\2\u012b\u012c\7g\2\2\u012c\u0135\7p\2\2"+
		"\u012d\u012e\7D\2\2\u012e\u012f\7G\2\2\u012f\u0130\7V\2\2\u0130\u0131"+
		"\7Y\2\2\u0131\u0132\7G\2\2\u0132\u0133\7G\2\2\u0133\u0135\7P\2\2\u0134"+
		"\u0126\3\2\2\2\u0134\u012d\3\2\2\2\u0135&\3\2\2\2\u0136\u0137\7t\2\2\u0137"+
		"\u0138\7g\2\2\u0138\u0139\7i\2\2\u0139\u013a\7g\2\2\u013a\u013b\7z\2\2"+
		"\u013b\u013c\7r\2\2\u013c(\3\2\2\2\u013d\u013e\7-\2\2\u013e*\3\2\2\2\u013f"+
		"\u0140\7/\2\2\u0140,\3\2\2\2\u0141\u0142\7\u0080\2\2\u0142.\3\2\2\2\u0143"+
		"\u0144\7~\2\2\u0144\60\3\2\2\2\u0145\u0146\7(\2\2\u0146\62\3\2\2\2\u0147"+
		"\u0148\7`\2\2\u0148\64\3\2\2\2\u0149\u014a\7d\2\2\u014a\u014b\7k\2\2\u014b"+
		"\u014c\7p\2\2\u014c\u014d\7c\2\2\u014d\u014e\7t\2\2\u014e\u014f\7{\2\2"+
		"\u014f\66\3\2\2\2\u0150\u0151\7>\2\2\u0151\u0152\7>\2\2\u01528\3\2\2\2"+
		"\u0153\u0154\7@\2\2\u0154\u0155\7@\2\2\u0155:\3\2\2\2\u0156\u0157\7g\2"+
		"\2\u0157\u0158\7u\2\2\u0158\u0159\7e\2\2\u0159\u015a\7c\2\2\u015a\u015b"+
		"\7r\2\2\u015b\u015c\7g\2\2\u015c<\3\2\2\2\u015d\u015e\7,\2\2\u015e>\3"+
		"\2\2\2\u015f\u0160\7+\2\2\u0160@\3\2\2\2\u0161\u0162\7*\2\2\u0162B\3\2"+
		"\2\2\u0163\u0164\7_\2\2\u0164D\3\2\2\2\u0165\u0166\7]\2\2\u0166F\3\2\2"+
		"\2\u0167\u0168\7<\2\2\u0168H\3\2\2\2\u0169\u016a\7\60\2\2\u016a\u016b"+
		"\7,\2\2\u016bJ\3\2\2\2\u016c\u016d\7?\2\2\u016dL\3\2\2\2\u016e\u016f\7"+
		">\2\2\u016fN\3\2\2\2\u0170\u0171\7@\2\2\u0171P\3\2\2\2\u0172\u0173\7#"+
		"\2\2\u0173\u0174\7?\2\2\u0174R\3\2\2\2\u0175\u0176\7p\2\2\u0176\u0177"+
		"\7q\2\2\u0177\u017c\7v\2\2\u0178\u0179\7P\2\2\u0179\u017a\7Q\2\2\u017a"+
		"\u017c\7V\2\2\u017b\u0175\3\2\2\2\u017b\u0178\3\2\2\2\u017cT\3\2\2\2\u017d"+
		"\u017e\7>\2\2\u017e\u017f\7?\2\2\u017fV\3\2\2\2\u0180\u0181\7@\2\2\u0181"+
		"\u0182\7?\2\2\u0182X\3\2\2\2\u0183\u0184\7=\2\2\u0184Z\3\2\2\2\u0185\u0186"+
		"\7.\2\2\u0186\\\3\2\2\2\u0187\u0188\7\60\2\2\u0188^\3\2\2\2\u0189\u018a"+
		"\7e\2\2\u018a\u018b\7q\2\2\u018b\u018c\7n\2\2\u018c\u018d\7n\2\2\u018d"+
		"\u018e\7c\2\2\u018e\u018f\7v\2\2\u018f\u0190\7g\2\2\u0190`\3\2\2\2\u0191"+
		"\u0192\7k\2\2\u0192\u0193\7p\2\2\u0193\u0194\7p\2\2\u0194\u0195\7g\2\2"+
		"\u0195\u0196\7t\2\2\u0196b\3\2\2\2\u0197\u0198\7q\2\2\u0198\u0199\7w\2"+
		"\2\u0199\u019a\7v\2\2\u019a\u019b\7g\2\2\u019b\u019c\7t\2\2\u019cd\3\2"+
		"\2\2\u019d\u019e\7l\2\2\u019e\u019f\7q\2\2\u019f\u01a0\7k\2\2\u01a0\u01a6"+
		"\7p\2\2\u01a1\u01a2\7L\2\2\u01a2\u01a3\7Q\2\2\u01a3\u01a4\7K\2\2\u01a4"+
		"\u01a6\7P\2\2\u01a5\u019d\3\2\2\2\u01a5\u01a1\3\2\2\2\u01a6f\3\2\2\2\u01a7"+
		"\u01a8\7e\2\2\u01a8\u01a9\7t\2\2\u01a9\u01aa\7q\2\2\u01aa\u01ab\7u\2\2"+
		"\u01ab\u01ac\7u\2\2\u01ach\3\2\2\2\u01ad\u01ae\7w\2\2\u01ae\u01af\7u\2"+
		"\2\u01af\u01b0\7k\2\2\u01b0\u01b1\7p\2\2\u01b1\u01b8\7i\2\2\u01b2\u01b3"+
		"\7W\2\2\u01b3\u01b4\7U\2\2\u01b4\u01b5\7K\2\2\u01b5\u01b6\7P\2\2\u01b6"+
		"\u01b8\7I\2\2\u01b7\u01ad\3\2\2\2\u01b7\u01b2\3\2\2\2\u01b8j\3\2\2\2\u01b9"+
		"\u01ba\7k\2\2\u01ba\u01bb\7p\2\2\u01bb\u01bc\7f\2\2\u01bc\u01bd\7g\2\2"+
		"\u01bd\u01be\7z\2\2\u01bel\3\2\2\2\u01bf\u01c0\7m\2\2\u01c0\u01c1\7g\2"+
		"\2\u01c1\u01c6\7{\2\2\u01c2\u01c3\7M\2\2\u01c3\u01c4\7G\2\2\u01c4\u01c6"+
		"\7[\2\2\u01c5\u01bf\3\2\2\2\u01c5\u01c2\3\2\2\2\u01c6n\3\2\2\2\u01c7\u01c8"+
		"\7q\2\2\u01c8\u01c9\7t\2\2\u01c9\u01ca\7f\2\2\u01ca\u01cb\7g\2\2\u01cb"+
		"\u01d2\7t\2\2\u01cc\u01cd\7Q\2\2\u01cd\u01ce\7T\2\2\u01ce\u01cf\7F\2\2"+
		"\u01cf\u01d0\7G\2\2\u01d0\u01d2\7T\2\2\u01d1\u01c7\3\2\2\2\u01d1\u01cc"+
		"\3\2\2\2\u01d2p\3\2\2\2\u01d3\u01d4\7i\2\2\u01d4\u01d5\7t\2\2\u01d5\u01d6"+
		"\7q\2\2\u01d6\u01d7\7w\2\2\u01d7\u01de\7r\2\2\u01d8\u01d9\7I\2\2\u01d9"+
		"\u01da\7T\2\2\u01da\u01db\7Q\2\2\u01db\u01dc\7W\2\2\u01dc\u01de\7R\2\2"+
		"\u01dd\u01d3\3\2\2\2\u01dd\u01d8\3\2\2\2\u01der\3\2\2\2\u01df\u01e0\7"+
		"d\2\2\u01e0\u01e4\7{\2\2\u01e1\u01e2\7D\2\2\u01e2\u01e4\7[\2\2\u01e3\u01df"+
		"\3\2\2\2\u01e3\u01e1\3\2\2\2\u01e4t\3\2\2\2\u01e5\u01e6\7h\2\2\u01e6\u01e7"+
		"\7q\2\2\u01e7\u01ec\7t\2\2\u01e8\u01e9\7H\2\2\u01e9\u01ea\7Q\2\2\u01ea"+
		"\u01ec\7T\2\2\u01eb\u01e5\3\2\2\2\u01eb\u01e8\3\2\2\2\u01ecv\3\2\2\2\u01ed"+
		"\u01ee\7w\2\2\u01ee\u01ef\7u\2\2\u01ef\u01f4\7g\2\2\u01f0\u01f1\7W\2\2"+
		"\u01f1\u01f2\7U\2\2\u01f2\u01f4\7G\2\2\u01f3\u01ed\3\2\2\2\u01f3\u01f0"+
		"\3\2\2\2\u01f4x\3\2\2\2\u01f5\u01f6\7k\2\2\u01f6\u01f7\7i\2\2\u01f7\u01f8"+
		"\7p\2\2\u01f8\u01f9\7q\2\2\u01f9\u01fa\7t\2\2\u01fa\u01fb\7g\2\2\u01fb"+
		"z\3\2\2\2\u01fc\u01fd\7r\2\2\u01fd\u01fe\7c\2\2\u01fe\u01ff\7t\2\2\u01ff"+
		"\u0200\7v\2\2\u0200\u0201\7k\2\2\u0201\u0202\7v\2\2\u0202\u0203\7k\2\2"+
		"\u0203\u0204\7q\2\2\u0204\u0205\7p\2\2\u0205|\3\2\2\2\u0206\u0207\7u\2"+
		"\2\u0207\u0208\7v\2\2\u0208\u0209\7t\2\2\u0209\u020a\7c\2\2\u020a\u020b"+
		"\7k\2\2\u020b\u020c\7i\2\2\u020c\u020d\7j\2\2\u020d\u020e\7v\2\2\u020e"+
		"\u020f\7a\2\2\u020f\u0210\7l\2\2\u0210\u0211\7q\2\2\u0211\u0212\7k\2\2"+
		"\u0212\u0213\7p\2\2\u0213~\3\2\2\2\u0214\u0215\7p\2\2\u0215\u0216\7c\2"+
		"\2\u0216\u0217\7v\2\2\u0217\u0218\7w\2\2\u0218\u0219\7t\2\2\u0219\u021a"+
		"\7c\2\2\u021a\u021b\7n\2\2\u021b\u0080\3\2\2\2\u021c\u021d\7n\2\2\u021d"+
		"\u021e\7g\2\2\u021e\u021f\7h\2\2\u021f\u0220\7v\2\2\u0220\u0082\3\2\2"+
		"\2\u0221\u0222\7t\2\2\u0222\u0223\7k\2\2\u0223\u0224\7i\2\2\u0224\u0225"+
		"\7j\2\2\u0225\u0226\7v\2\2\u0226\u0084\3\2\2\2\u0227\u0228\7q\2\2\u0228"+
		"\u0229\7l\2\2\u0229\u0086\3\2\2\2\u022a\u022b\7q\2\2\u022b\u022c\7p\2"+
		"\2\u022c\u0088\3\2\2\2\u022d\u022f\t\2\2\2\u022e\u022d\3\2\2\2\u022f\u0230"+
		"\3\2\2\2\u0230\u022e\3\2\2\2\u0230\u0231\3\2\2\2\u0231\u008a\3\2\2\2\u0232"+
		"\u0234\4\62;\2\u0233\u0232\3\2\2\2\u0234\u0235\3\2\2\2\u0235\u0233\3\2"+
		"\2\2\u0235\u0236\3\2\2\2\u0236\u008c\3\2\2\2\u0237\u0239\7\17\2\2\u0238"+
		"\u0237\3\2\2\2\u0238\u0239\3\2\2\2\u0239\u023a\3\2\2\2\u023a\u023b\7\f"+
		"\2\2\u023b\u023c\3\2\2\2\u023c\u023d\bG\2\2\u023d\u008e\3\2\2\2\u023e"+
		"\u0240\t\3\2\2\u023f\u023e\3\2\2\2\u0240\u0241\3\2\2\2\u0241\u023f\3\2"+
		"\2\2\u0241\u0242\3\2\2\2\u0242\u0243\3\2\2\2\u0243\u0244\bH\2\2\u0244"+
		"\u0090\3\2\2\2\u0245\u024a\7B\2\2\u0246\u024b\5\u0093J\2\u0247\u024b\5"+
		"\u0095K\2\u0248\u024b\5\u0097L\2\u0249\u024b\5\u0099M\2\u024a\u0246\3"+
		"\2\2\2\u024a\u0247\3\2\2\2\u024a\u0248\3\2\2\2\u024a\u0249\3\2\2\2\u024b"+
		"\u0092\3\2\2\2\u024c\u024e\7b\2\2\u024d\u024f\n\4\2\2\u024e\u024d\3\2"+
		"\2\2\u024f\u0250\3\2\2\2\u0250\u024e\3\2\2\2\u0250\u0251\3\2\2\2\u0251"+
		"\u0252\3\2\2\2\u0252\u0253\7b\2\2\u0253\u0094\3\2\2\2\u0254\u0256\7)\2"+
		"\2\u0255\u0257\n\5\2\2\u0256\u0255\3\2\2\2\u0257\u0258\3\2\2\2\u0258\u0256"+
		"\3\2\2\2\u0258\u0259\3\2\2\2\u0259\u025a\3\2\2\2\u025a\u025b\7)\2\2\u025b"+
		"\u0096\3\2\2\2\u025c\u025e\7$\2\2\u025d\u025f\n\6\2\2\u025e\u025d\3\2"+
		"\2\2\u025f\u0260\3\2\2\2\u0260\u025e\3\2\2\2\u0260\u0261\3\2\2\2\u0261"+
		"\u0262\3\2\2\2\u0262\u0263\7$\2\2\u0263\u0098\3\2\2\2\u0264\u0267\t\7"+
		"\2\2\u0265\u0267\5]/\2\u0266\u0264\3\2\2\2\u0266\u0265\3\2\2\2\u0267\u0268"+
		"\3\2\2\2\u0268\u0266\3\2\2\2\u0268\u0269\3\2\2\2\u0269\u009a\3\2\2\2$"+
		"\2\u00a7\u00b1\u00bd\u00c7\u00cf\u00d7\u00dd\u00e7\u00f1\u00f7\u0105\u011e"+
		"\u0124\u0134\u017b\u01a5\u01b7\u01c5\u01d1\u01dd\u01e3\u01eb\u01f3\u0230"+
		"\u0235\u0238\u0241\u024a\u0250\u0258\u0260\u0266\u0268\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}